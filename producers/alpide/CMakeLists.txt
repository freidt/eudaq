set(name "ALPIDEProducer.exe")
set(sourcefiles src/ALPIDEProducer.cxx)
# config files to be installed

if (NOT CMAKE_ALPIDE_SOFTWARE_INCLUDE)
  message(FATAL_ERROR "Path to ALPIDE driver not set - you need to set CMAKE_ALPIDE_SOFTWARE_INCLUDE")
endif(NOT CMAKE_ALPIDE_SOFTWARE_INCLUDE)

FIND_PACKAGE( TINYXML REQUIRED )
if (TINYXML_FOUND)
  INCLUDE_DIRECTORIES( ${TINYXML_INCLUDE_DIRS} )
  SET(ADDITIONAL_LIBRARIES ${TINYXML_LIBRARIES} )
  ADD_DEFINITIONS(-DUSE_TINYXML)
endif (TINYXML_FOUND)

find_package(libusb-1.0 REQUIRED)

if (NOT EXISTS "${CMAKE_ALPIDE_SOFTWARE_INCLUDE}/TAlpide.h")
  message(FATAL_ERROR "Path to ALPIDE driver is wrong - Could not find ${CMAKE_ALPIDE_SOFTWARE_INCLUDE}/TTestsetup.h")
endif (NOT EXISTS "${CMAKE_ALPIDE_SOFTWARE_INCLUDE}/TAlpide.h")
if (NOT EXISTS "${CMAKE_ALPIDE_SOFTWARE_INCLUDE}/libalpide.so")
  message(FATAL_ERROR "Path to alpide driver is wrong - Could not find ${CMAKE_ALPIDE_SOFTWARE_INCLUDE}/libalpide.so")
endif (NOT EXISTS "${CMAKE_ALPIDE_SOFTWARE_INCLUDE}/libalpide.so")

set(driver_library "${CMAKE_ALPIDE_SOFTWARE_INCLUDE}/libalpide.so" )

INCLUDE_DIRECTORIES( "include" ${CMAKE_ALPIDE_SOFTWARE_INCLUDE} ${LIBUSB_1_INCLUDE_DIRS})
ADD_EXECUTABLE(${name} ${sourcefiles})

TARGET_LINK_LIBRARIES(${name} EUDAQ ${CMAKE_THREAD_LIBS_INIT} ${LIBUSB_1_LIBRARIES} ${TINYXML_LIBRARIES} ${driver_library})

SET_TARGET_PROPERTIES(EUDAQ PROPERTIES COMPILE_DEFINITIONS "ALPIDE")

INSTALL(TARGETS ${name}
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib)


INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/conf/alpide.conf DESTINATION ${CMAKE_INSTALL_PREFIX}/conf)
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/conf/alpide.init DESTINATION ${CMAKE_INSTALL_PREFIX}/conf)
INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/conf/alpide DESTINATION ${CMAKE_INSTALL_PREFIX}/conf)
INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/conf/alpide/full_ALPIDE.xml DESTINATION ${CMAKE_INSTALL_PREFIX}/conf/alpide)
